//https://leetcode.com/problems/merge-strings-alternately
/*Example 1:
Input: word1 = "abc", word2 = "pqr"
Output: "apbqcr"
Explanation: The merged string will be merged as so:
word1:  a   b   c
word2:    p   q   r
merged: a p b q c r
Example 2:
Input: word1 = "ab", word2 = "pqrs"
Output: "apbqrs"
Explanation: Notice that as word2 is longer, "rs" is appended to the end.
word1:  a   b 
word2:    p   q   r   s
merged: a p b q   r   s*/
class Solution {
    public String mergeAlternately(String word1, String word2) {
        int totalLength = word1.length() + word2.length();
        char[] arr1 = word1.toCharArray();
        char[] arr2 = word2.toCharArray(); 
        StringBuilder ans = new StringBuilder();
        int i = 0;
        int j = 0;
        for(int k = 0 ; k< totalLength; k++){
            if(i<word1.length()){
                ans = ans.append(arr1[i]);
                i++;
            }
            if(j<word2.length()){
                ans = ans.append(arr2[j]);
                j++;
            }
        }
        return ans.toString();
    }
    //Time complexity: O(n) Since we traverse both strings once and pick each character alternately.
    //Space complexity: O(n )We use a StringBuilder to store the merged string.
}
