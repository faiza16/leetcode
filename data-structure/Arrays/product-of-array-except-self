//https://leetcode.com/problems/product-of-array-except-self/
class Solution {
    public int[] productExceptSelf(int[] nums) {
        int prefixArr[] = new int[nums.length];
        int suffixArr[] = new int[nums.length];
        int n = nums.length;
        prefixArr[0] = 1;
        for (int i = 1; i < n; i++) {
            prefixArr[i] = nums[i - 1] * prefixArr[i - 1];
        }
        suffixArr[n - 1] = 1;
        for (int i = n - 2; i >= 0; i--) {
            suffixArr[i] = nums[i + 1] * suffixArr[i + 1];
        }
        int answer[] = new int[n];
        for (int i = 0; i < n; i++) {
            answer[i] = prefixArr[i] * suffixArr[i];
        }
        return answer;

    }
    //How can I optimize?
   //TimeComplexity  : O(n)
   //SpaceComplexity :  O(n)

}
