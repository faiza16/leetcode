//https://leetcode.com/problems/contains-duplicate
class Solution {
    public boolean containsDuplicate(int[] nums) {
        /*1. 
        HashMap<Integer,Integer> map = new HashMap();
        for(int i=0; i< nums.length; i++){
            if(map.containsKey(nums[i]))
                return true;
            else
                map.put(nums[i], 1);
        }
        return false;
        Time complexity: O(n)
        Space complexity: O(n)
        */
        
        /*2.
         Arrays.sort(nums);
         for(int i=0; i< nums.length-1; i++){
            if(nums[i] == nums[i+1])
                return true;
        }
        return false;
        Time complexity: O(nlog(n))
        Space complexity: O(log(n))
        */

        HashSet<Integer> set = new HashSet<>();
        for (int i = 0; i < nums.length; i++) {
                if (set.contains(nums[i])) {
                    return true;
                }
                set.add(nums[i]);
        }
        return false;
        //Time complexity: O(n)
        //Space complexity: O(n)
    }
}
